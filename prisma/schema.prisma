// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id  @default(uuid())
  role      Role     @default(user)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts     Post[]
}

model Post {
  id        Int        @id @default(autoincrement())
  userId    String
  caption   String
  status    PostStatus @default(draft)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  user      User       @relation(fields: [userId], references: [id] )
  memo      Memo?
  images    Image[]
}

model Memo {
  id          Int      @id @default(autoincrement())
  postId      Int      @unique
  freeMemo    String?
  answerWhy   String?
  answerWhat  String?
  answerNext  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  post        Post     @relation(fields: [postId], references: [id])
}

model Image {
  id          Int      @id @default(autoincrement())
  postId      Int
  url         String
  generatedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt

  post        Post     @relation(fields: [postId], references: [id])
}

enum Role {
  user
  admin
}

enum PostStatus {
  draft
  published
  archived
  deleted
}